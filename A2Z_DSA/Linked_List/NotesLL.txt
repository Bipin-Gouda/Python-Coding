The self  

- "Class methods" must have an extra first parameter in the method definition. We do not give a value for this parameter
   when we call the method, Python provides it  (only the Class "Methods")
-If we have a method that takes no arguments, then we still have to have one argument.
-This is similar to this pointer in C++ and this reference in Java.
-When we call a method of this object as myobject.method(arg1, arg2), this is automatically converted by Python into
 MyClass.method(myobject, arg1, arg2) â€“ this is all the special self is about.

1. Reversing LL

void revLL(node* &head){
    node*current=head,*next,*prev=NULL;
    while(current!=NULL){
        next=current->next;
        current->next=prev;
        prev=current;
        current=next;
    }
    head=prev;

}

2. Finding mid element 

void findmid(node* &head){
    node*p1=head,*p2=head;
    while(p2!=NULL&&p2->next!=NULL){
        p1=p1->next;
        p2=(p2->next)?p2->next->next:NULL;
    }
    printf("%d",p1->data);

}

3. Finding loop in LL 

void findLoop(node* head){
    node* slow=head,*fast=head->next;
    while(slow!=NULL && fast!=NULL){
        if(slow->data == fast->data){
            print("Loop detected");
            exit(0);
        }
        slow=slow->next;
        fast=(fast->next)?fast->next->fast->next;
    }
}